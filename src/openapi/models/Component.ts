/* tslint:disable */
/* eslint-disable */
/**
 * Babylon PTE API
 * Babylon Public Test Environment (PTE) API specification.
 *
 * The version of the OpenAPI document: 1.0.0-draft
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ComponentBlueprint,
    ComponentBlueprintFromJSON,
    ComponentBlueprintFromJSONTyped,
    ComponentBlueprintToJSON,
} from './ComponentBlueprint';
import {
    OwnedResource,
    OwnedResourceFromJSON,
    OwnedResourceFromJSONTyped,
    OwnedResourceToJSON,
} from './OwnedResource';

/**
 * 
 * @export
 * @interface Component
 */
export interface Component {
    /**
     * 
     * @type {ComponentBlueprint}
     * @memberof Component
     */
    blueprint: ComponentBlueprint;
    /**
     * 
     * @type {any}
     * @memberof Component
     */
    authorization: any | null;
    /**
     * 
     * @type {any}
     * @memberof Component
     */
    state: any | null;
    /**
     * 
     * @type {Array<OwnedResource>}
     * @memberof Component
     */
    ownedResources: Array<OwnedResource>;
}

export function ComponentFromJSON(json: any): Component {
    return ComponentFromJSONTyped(json, false);
}

export function ComponentFromJSONTyped(json: any, ignoreDiscriminator: boolean): Component {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'blueprint': ComponentBlueprintFromJSON(json['blueprint']),
        'authorization': json['authorization'],
        'state': json['state'],
        'ownedResources': ((json['ownedResources'] as Array<any>).map(OwnedResourceFromJSON)),
    };
}

export function ComponentToJSON(value?: Component | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'blueprint': ComponentBlueprintToJSON(value.blueprint),
        'authorization': value.authorization,
        'state': value.state,
        'ownedResources': ((value.ownedResources as Array<any>).map(OwnedResourceToJSON)),
    };
}

